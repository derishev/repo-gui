"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def counter(number, chet = 0, nechet = 0):
    if len(number) == 0:
        print(chet, nechet)
        return
    else:
        if int(number[0]) % 2 > 0:
            nechet += 1
            number = number[1:]
            counter(number, chet, nechet)
        else:
            chet += 1
            number = number[1:]
            counter(number, chet, nechet)



if __name__ == '__main__':
    counter('45678')
