"""
Задание 1.
Реализуйте функции:
a) заполнение списка, оцените сложность в O-нотации (операции нужно провдить в цикле)
   заполнение словаря, оцените сложность в O-нотации (операции нужно провдить в цикле)
   сделайте аналитику, что заполняется быстрее и почему
   сделайте замеры времени
b) получение элемента списка, оцените сложность в O-нотации (операции нужно провдить в цикле)
   получение элемента словаря, оцените сложность в O-нотации (операции нужно провдить в цикле)
   сделайте аналитику, что заполняется быстрее и почему
   сделайте замеры времени
с) удаление элемента списка, оцените сложность в O-нотации (операции нужно провдить в цикле)
   удаление элемента словаря, оцените сложность в O-нотации (операции нужно провдить в цикле)
   сделайте аналитику, что заполняется быстрее и почему
   сделайте замеры времени
ВНИМАНИЕ: в задании три пункта
НУЖНО выполнить каждый пункт
обязательно отделяя каждый пункт друг от друга
Подсказка: для замеров воспользуйтесь модулем time (см. примеры урока 1)
вы уже знаете, что такое декоратор и как его реализовать,
обязательно реализуйте ф-цию-декоратор и пусть она считает время
И примените ее к своим функциям!
"""

import time
n = 10000000
my_list = []
my_dict = {}

def decorator(func):
    def timer(*args, **kwargs):
        start = time.time()
        result = func(*args, **kwargs)
        end = time.time()
        print('Время = ', end - start)
        return result
    return timer

@decorator
def new_list(lst, number):
    for i in range(number):
        lst.append(i)  #O(1)


@decorator
def new_dict(dct, number):
    for i in range(number):
        dct[i] = i #O(1)


new_list(my_list, n)
new_dict(my_dict, n)

# Заполнение списка чуть быстрее
"""
Время =  0.39307332038879395
Время =  0.437835693359375
"""

@decorator
def edit_list(lst):
    for i in range(1000000):
        lst[i] = lst[i + 5]  #O(1)


@decorator
def edit_dict(dct):
    for i in range(1000000):
        dct[i] = 4 #O(1)


edit_list(my_list)
edit_dict(my_dict)


#Изменение словаря чуть быстрее
"""
Время =  0.038115739822387695
Время =  0.03210783004760742
"""


@decorator
def del_list(lst):
    for i in range(10000):
        lst.pop(i)   # O(n)


@decorator
def del_dict(dct):
    for i in range(10000):
        dct.pop(i)    # O(1)


del_list(my_list)
del_dict(my_dict)

#Удаление сорваря на порядок быстрее
"""
Время =  43.71052622795105 
Время =  0.0 
"""